# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: acquired.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='acquired.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0e\x61\x63quired.proto\"(\n\x08\x43\x61mpaign\x12\x0b\n\x03\x61pp\x18\x01 \x01(\t\x12\x0f\n\x07\x63hannel\x18\x02 \x01(\t\",\n\x13GetCampaignsRequest\x12\x15\n\rad_account_id\x18\x01 \x01(\x03\x32@\n\x08\x41\x63quired\x12\x34\n\rget_campaigns\x12\x14.GetCampaignsRequest\x1a\t.Campaign\"\x00\x30\x01\x62\x06proto3')
)




_CAMPAIGN = _descriptor.Descriptor(
  name='Campaign',
  full_name='Campaign',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='app', full_name='Campaign.app', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel', full_name='Campaign.channel', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=58,
)


_GETCAMPAIGNSREQUEST = _descriptor.Descriptor(
  name='GetCampaignsRequest',
  full_name='GetCampaignsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ad_account_id', full_name='GetCampaignsRequest.ad_account_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=60,
  serialized_end=104,
)

DESCRIPTOR.message_types_by_name['Campaign'] = _CAMPAIGN
DESCRIPTOR.message_types_by_name['GetCampaignsRequest'] = _GETCAMPAIGNSREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Campaign = _reflection.GeneratedProtocolMessageType('Campaign', (_message.Message,), dict(
  DESCRIPTOR = _CAMPAIGN,
  __module__ = 'acquired_pb2'
  # @@protoc_insertion_point(class_scope:Campaign)
  ))
_sym_db.RegisterMessage(Campaign)

GetCampaignsRequest = _reflection.GeneratedProtocolMessageType('GetCampaignsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCAMPAIGNSREQUEST,
  __module__ = 'acquired_pb2'
  # @@protoc_insertion_point(class_scope:GetCampaignsRequest)
  ))
_sym_db.RegisterMessage(GetCampaignsRequest)



_ACQUIRED = _descriptor.ServiceDescriptor(
  name='Acquired',
  full_name='Acquired',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=106,
  serialized_end=170,
  methods=[
  _descriptor.MethodDescriptor(
    name='get_campaigns',
    full_name='Acquired.get_campaigns',
    index=0,
    containing_service=None,
    input_type=_GETCAMPAIGNSREQUEST,
    output_type=_CAMPAIGN,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ACQUIRED)

DESCRIPTOR.services_by_name['Acquired'] = _ACQUIRED

# @@protoc_insertion_point(module_scope)
